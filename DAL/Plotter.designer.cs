#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PlotterRS485")]
	public partial class PlotterDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAcknowledge(Acknowledge instance);
    partial void UpdateAcknowledge(Acknowledge instance);
    partial void DeleteAcknowledge(Acknowledge instance);
    partial void InsertAlaram_Log(Alaram_Log instance);
    partial void UpdateAlaram_Log(Alaram_Log instance);
    partial void DeleteAlaram_Log(Alaram_Log instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertDevice_Config(Device_Config instance);
    partial void UpdateDevice_Config(Device_Config instance);
    partial void DeleteDevice_Config(Device_Config instance);
    partial void InsertDevice_Enum(Device_Enum instance);
    partial void UpdateDevice_Enum(Device_Enum instance);
    partial void DeleteDevice_Enum(Device_Enum instance);
    partial void InsertEmail(Email instance);
    partial void UpdateEmail(Email instance);
    partial void DeleteEmail(Email instance);
    partial void InsertEventLog(EventLog instance);
    partial void UpdateEventLog(EventLog instance);
    partial void DeleteEventLog(EventLog instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertGroup_Device(Group_Device instance);
    partial void UpdateGroup_Device(Group_Device instance);
    partial void DeleteGroup_Device(Group_Device instance);
    partial void InsertGroup_User(Group_User instance);
    partial void UpdateGroup_User(Group_User instance);
    partial void DeleteGroup_User(Group_User instance);
    partial void InsertLimitTable(LimitTable instance);
    partial void UpdateLimitTable(LimitTable instance);
    partial void DeleteLimitTable(LimitTable instance);
    partial void InsertofsetAuditRecord(ofsetAuditRecord instance);
    partial void UpdateofsetAuditRecord(ofsetAuditRecord instance);
    partial void DeleteofsetAuditRecord(ofsetAuditRecord instance);
    partial void InsertSM(SM instance);
    partial void UpdateSM(SM instance);
    partial void DeleteSM(SM instance);
    partial void InsertSYSProperty(SYSProperty instance);
    partial void UpdateSYSProperty(SYSProperty instance);
    partial void DeleteSYSProperty(SYSProperty instance);
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public PlotterDataContext() : 
				base(global::DAL.Properties.Settings.Default.PlotterRS485ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public PlotterDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PlotterDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PlotterDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PlotterDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Acknowledge> Acknowledges
		{
			get
			{
				return this.GetTable<Acknowledge>();
			}
		}
		
		public System.Data.Linq.Table<Alaram_Log> Alaram_Logs
		{
			get
			{
				return this.GetTable<Alaram_Log>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<Device_Config> Device_Configs
		{
			get
			{
				return this.GetTable<Device_Config>();
			}
		}
		
		public System.Data.Linq.Table<Device_Enum> Device_Enums
		{
			get
			{
				return this.GetTable<Device_Enum>();
			}
		}
		
		public System.Data.Linq.Table<Email> Emails
		{
			get
			{
				return this.GetTable<Email>();
			}
		}
		
		public System.Data.Linq.Table<EventLog> EventLogs
		{
			get
			{
				return this.GetTable<EventLog>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<Group_Device> Group_Devices
		{
			get
			{
				return this.GetTable<Group_Device>();
			}
		}
		
		public System.Data.Linq.Table<Group_User> Group_Users
		{
			get
			{
				return this.GetTable<Group_User>();
			}
		}
		
		public System.Data.Linq.Table<LimitTable> LimitTables
		{
			get
			{
				return this.GetTable<LimitTable>();
			}
		}
		
		public System.Data.Linq.Table<ofsetAuditRecord> ofsetAuditRecords
		{
			get
			{
				return this.GetTable<ofsetAuditRecord>();
			}
		}
		
		public System.Data.Linq.Table<SM> SMs
		{
			get
			{
				return this.GetTable<SM>();
			}
		}
		
		public System.Data.Linq.Table<SYSProperty> SYSProperties
		{
			get
			{
				return this.GetTable<SYSProperty>();
			}
		}
		
		public System.Data.Linq.Table<AllDevice> AllDevices
		{
			get
			{
				return this.GetTable<AllDevice>();
			}
		}
		
		public System.Data.Linq.Table<TotalDevice> TotalDevices
		{
			get
			{
				return this.GetTable<TotalDevice>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Create_dbBackup")]
		public ISingleResult<Create_dbBackupResult> Create_dbBackup([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string dbName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string location)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dbName, location);
			return ((ISingleResult<Create_dbBackupResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Get_Acknowladge")]
		public ISingleResult<Get_AcknowladgeResult> Get_Acknowladge()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Get_AcknowladgeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Insert_Acknowladge")]
		public int Insert_Acknowladge([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Device_ID", DbType="NVarChar(50)")] string device_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Location", DbType="NVarChar(50)")] string location, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Instrument", DbType="NVarChar(50)")] string instrument, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Event_Type", DbType="NVarChar(50)")] string event_Type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Event_DateTime", DbType="DateTime")] System.Nullable<System.DateTime> event_DateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Event", DbType="NVarChar(100)")] string @event)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), device_ID, location, instrument, event_Type, event_DateTime, @event);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertEventLog")]
		public int InsertEventLog([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string log, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string message)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, log, message);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Update_Acknowladge")]
		public int Update_Acknowladge([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ack_User", DbType="NVarChar(50)")] string ack_User, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ack_Comments", DbType="NVarChar(MAX)")] string ack_Comments)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ack_User, iD, ack_Comments);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DailyReport_Status_Update")]
		public int DailyReport_Status_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Devce_Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> devce_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), devce_Id);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acknowledge")]
	public partial class Acknowledge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Device_ID;
		
		private string _Event_Type;
		
		private System.Nullable<System.DateTime> _Event_DateTime;
		
		private string _Location;
		
		private string _Instrument;
		
		private string _Event;
		
		private string _Ack_Comments;
		
		private string _Ack_User;
		
		private System.Nullable<System.DateTime> _Ack_DateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDevice_IDChanging(string value);
    partial void OnDevice_IDChanged();
    partial void OnEvent_TypeChanging(string value);
    partial void OnEvent_TypeChanged();
    partial void OnEvent_DateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEvent_DateTimeChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnInstrumentChanging(string value);
    partial void OnInstrumentChanged();
    partial void OnEventChanging(string value);
    partial void OnEventChanged();
    partial void OnAck_CommentsChanging(string value);
    partial void OnAck_CommentsChanged();
    partial void OnAck_UserChanging(string value);
    partial void OnAck_UserChanged();
    partial void OnAck_DateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAck_DateTimeChanged();
    #endregion
		
		public Acknowledge()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_ID", DbType="NVarChar(50)")]
		public string Device_ID
		{
			get
			{
				return this._Device_ID;
			}
			set
			{
				if ((this._Device_ID != value))
				{
					this.OnDevice_IDChanging(value);
					this.SendPropertyChanging();
					this._Device_ID = value;
					this.SendPropertyChanged("Device_ID");
					this.OnDevice_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event_Type", DbType="NVarChar(50)")]
		public string Event_Type
		{
			get
			{
				return this._Event_Type;
			}
			set
			{
				if ((this._Event_Type != value))
				{
					this.OnEvent_TypeChanging(value);
					this.SendPropertyChanging();
					this._Event_Type = value;
					this.SendPropertyChanged("Event_Type");
					this.OnEvent_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event_DateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Event_DateTime
		{
			get
			{
				return this._Event_DateTime;
			}
			set
			{
				if ((this._Event_DateTime != value))
				{
					this.OnEvent_DateTimeChanging(value);
					this.SendPropertyChanging();
					this._Event_DateTime = value;
					this.SendPropertyChanged("Event_DateTime");
					this.OnEvent_DateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instrument", DbType="NVarChar(50)")]
		public string Instrument
		{
			get
			{
				return this._Instrument;
			}
			set
			{
				if ((this._Instrument != value))
				{
					this.OnInstrumentChanging(value);
					this.SendPropertyChanging();
					this._Instrument = value;
					this.SendPropertyChanged("Instrument");
					this.OnInstrumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event", DbType="NVarChar(100)")]
		public string Event
		{
			get
			{
				return this._Event;
			}
			set
			{
				if ((this._Event != value))
				{
					this.OnEventChanging(value);
					this.SendPropertyChanging();
					this._Event = value;
					this.SendPropertyChanged("Event");
					this.OnEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ack_Comments", DbType="NVarChar(MAX)")]
		public string Ack_Comments
		{
			get
			{
				return this._Ack_Comments;
			}
			set
			{
				if ((this._Ack_Comments != value))
				{
					this.OnAck_CommentsChanging(value);
					this.SendPropertyChanging();
					this._Ack_Comments = value;
					this.SendPropertyChanged("Ack_Comments");
					this.OnAck_CommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ack_User", DbType="NVarChar(50)")]
		public string Ack_User
		{
			get
			{
				return this._Ack_User;
			}
			set
			{
				if ((this._Ack_User != value))
				{
					this.OnAck_UserChanging(value);
					this.SendPropertyChanging();
					this._Ack_User = value;
					this.SendPropertyChanged("Ack_User");
					this.OnAck_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ack_DateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ack_DateTime
		{
			get
			{
				return this._Ack_DateTime;
			}
			set
			{
				if ((this._Ack_DateTime != value))
				{
					this.OnAck_DateTimeChanging(value);
					this.SendPropertyChanging();
					this._Ack_DateTime = value;
					this.SendPropertyChanged("Ack_DateTime");
					this.OnAck_DateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alaram_Log")]
	public partial class Alaram_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _Device_ID;
		
		private string _Device_Type;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _Time;
		
		private System.Nullable<decimal> @__data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDevice_IDChanging(int value);
    partial void OnDevice_IDChanged();
    partial void OnDevice_TypeChanging(string value);
    partial void OnDevice_TypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void On_dataChanging(System.Nullable<decimal> value);
    partial void On_dataChanged();
    #endregion
		
		public Alaram_Log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_ID", DbType="Int NOT NULL")]
		public int Device_ID
		{
			get
			{
				return this._Device_ID;
			}
			set
			{
				if ((this._Device_ID != value))
				{
					this.OnDevice_IDChanging(value);
					this.SendPropertyChanging();
					this._Device_ID = value;
					this.SendPropertyChanged("Device_ID");
					this.OnDevice_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_Type", DbType="NVarChar(50)")]
		public string Device_Type
		{
			get
			{
				return this._Device_Type;
			}
			set
			{
				if ((this._Device_Type != value))
				{
					this.OnDevice_TypeChanging(value);
					this.SendPropertyChanging();
					this._Device_Type = value;
					this.SendPropertyChanged("Device_Type");
					this.OnDevice_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_data]", Storage="__data", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> _data
		{
			get
			{
				return this.@__data;
			}
			set
			{
				if ((this.@__data != value))
				{
					this.On_dataChanging(value);
					this.SendPropertyChanging();
					this.@__data = value;
					this.SendPropertyChanged("_data");
					this.On_dataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Company_Name;
		
		private string _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnCompany_NameChanging(string value);
    partial void OnCompany_NameChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    #endregion
		
		public Company()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Company_Name
		{
			get
			{
				return this._Company_Name;
			}
			set
			{
				if ((this._Company_Name != value))
				{
					this.OnCompany_NameChanging(value);
					this.SendPropertyChanging();
					this._Company_Name = value;
					this.SendPropertyChanged("Company_Name");
					this.OnCompany_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Device_Config")]
	public partial class Device_Config : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Channel_id;
		
		private System.Nullable<int> _Device_Id;
		
		private System.Nullable<int> _Device_Type;
		
		private string _Location;
		
		private string _Instrument;
		
		private System.Nullable<int> _Interval;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<bool> _Alaram;
		
		private System.Nullable<System.DateTime> _Last_Record;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDateTime;
		
		private System.Nullable<bool> _IsRowActive;
		
		private System.Nullable<bool> _Rh_Active;
		
		private System.Nullable<System.DateTime> _ReportSendDate;
		
		private EntitySet<LimitTable> _LimitTables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnChannel_idChanging(string value);
    partial void OnChannel_idChanged();
    partial void OnDevice_IdChanging(System.Nullable<int> value);
    partial void OnDevice_IdChanged();
    partial void OnDevice_TypeChanging(System.Nullable<int> value);
    partial void OnDevice_TypeChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnInstrumentChanging(string value);
    partial void OnInstrumentChanged();
    partial void OnIntervalChanging(System.Nullable<int> value);
    partial void OnIntervalChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnAlaramChanging(System.Nullable<bool> value);
    partial void OnAlaramChanged();
    partial void OnLast_RecordChanging(System.Nullable<System.DateTime> value);
    partial void OnLast_RecordChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateTimeChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateTimeChanged();
    partial void OnIsRowActiveChanging(System.Nullable<bool> value);
    partial void OnIsRowActiveChanged();
    partial void OnRh_ActiveChanging(System.Nullable<bool> value);
    partial void OnRh_ActiveChanged();
    partial void OnReportSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReportSendDateChanged();
    #endregion
		
		public Device_Config()
		{
			this._LimitTables = new EntitySet<LimitTable>(new Action<LimitTable>(this.attach_LimitTables), new Action<LimitTable>(this.detach_LimitTables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Channel_id", DbType="NVarChar(50)")]
		public string Channel_id
		{
			get
			{
				return this._Channel_id;
			}
			set
			{
				if ((this._Channel_id != value))
				{
					this.OnChannel_idChanging(value);
					this.SendPropertyChanging();
					this._Channel_id = value;
					this.SendPropertyChanged("Channel_id");
					this.OnChannel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_Id", DbType="Int")]
		public System.Nullable<int> Device_Id
		{
			get
			{
				return this._Device_Id;
			}
			set
			{
				if ((this._Device_Id != value))
				{
					this.OnDevice_IdChanging(value);
					this.SendPropertyChanging();
					this._Device_Id = value;
					this.SendPropertyChanged("Device_Id");
					this.OnDevice_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_Type", DbType="Int")]
		public System.Nullable<int> Device_Type
		{
			get
			{
				return this._Device_Type;
			}
			set
			{
				if ((this._Device_Type != value))
				{
					this.OnDevice_TypeChanging(value);
					this.SendPropertyChanging();
					this._Device_Type = value;
					this.SendPropertyChanged("Device_Type");
					this.OnDevice_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instrument", DbType="NVarChar(50)")]
		public string Instrument
		{
			get
			{
				return this._Instrument;
			}
			set
			{
				if ((this._Instrument != value))
				{
					this.OnInstrumentChanging(value);
					this.SendPropertyChanging();
					this._Instrument = value;
					this.SendPropertyChanged("Instrument");
					this.OnInstrumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interval", DbType="Int")]
		public System.Nullable<int> Interval
		{
			get
			{
				return this._Interval;
			}
			set
			{
				if ((this._Interval != value))
				{
					this.OnIntervalChanging(value);
					this.SendPropertyChanging();
					this._Interval = value;
					this.SendPropertyChanged("Interval");
					this.OnIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alaram", DbType="Bit")]
		public System.Nullable<bool> Alaram
		{
			get
			{
				return this._Alaram;
			}
			set
			{
				if ((this._Alaram != value))
				{
					this.OnAlaramChanging(value);
					this.SendPropertyChanging();
					this._Alaram = value;
					this.SendPropertyChanged("Alaram");
					this.OnAlaramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Record", DbType="DateTime")]
		public System.Nullable<System.DateTime> Last_Record
		{
			get
			{
				return this._Last_Record;
			}
			set
			{
				if ((this._Last_Record != value))
				{
					this.OnLast_RecordChanging(value);
					this.SendPropertyChanging();
					this._Last_Record = value;
					this.SendPropertyChanged("Last_Record");
					this.OnLast_RecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this.OnCreateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateDateTime = value;
					this.SendPropertyChanged("CreateDateTime");
					this.OnCreateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDateTime
		{
			get
			{
				return this._ModifiedDateTime;
			}
			set
			{
				if ((this._ModifiedDateTime != value))
				{
					this.OnModifiedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDateTime = value;
					this.SendPropertyChanged("ModifiedDateTime");
					this.OnModifiedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRowActive", DbType="Bit")]
		public System.Nullable<bool> IsRowActive
		{
			get
			{
				return this._IsRowActive;
			}
			set
			{
				if ((this._IsRowActive != value))
				{
					this.OnIsRowActiveChanging(value);
					this.SendPropertyChanging();
					this._IsRowActive = value;
					this.SendPropertyChanged("IsRowActive");
					this.OnIsRowActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rh_Active", DbType="Bit")]
		public System.Nullable<bool> Rh_Active
		{
			get
			{
				return this._Rh_Active;
			}
			set
			{
				if ((this._Rh_Active != value))
				{
					this.OnRh_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Rh_Active = value;
					this.SendPropertyChanged("Rh_Active");
					this.OnRh_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportSendDate", DbType="Date")]
		public System.Nullable<System.DateTime> ReportSendDate
		{
			get
			{
				return this._ReportSendDate;
			}
			set
			{
				if ((this._ReportSendDate != value))
				{
					this.OnReportSendDateChanging(value);
					this.SendPropertyChanging();
					this._ReportSendDate = value;
					this.SendPropertyChanged("ReportSendDate");
					this.OnReportSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_Config_LimitTable", Storage="_LimitTables", ThisKey="ID", OtherKey="Device_id")]
		public EntitySet<LimitTable> LimitTables
		{
			get
			{
				return this._LimitTables;
			}
			set
			{
				this._LimitTables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LimitTables(LimitTable entity)
		{
			this.SendPropertyChanging();
			entity.Device_Config = this;
		}
		
		private void detach_LimitTables(LimitTable entity)
		{
			this.SendPropertyChanging();
			entity.Device_Config = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Device_Enum")]
	public partial class Device_Enum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type;
		
		private EntitySet<LimitTable> _LimitTables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public Device_Enum()
		{
			this._LimitTables = new EntitySet<LimitTable>(new Action<LimitTable>(this.attach_LimitTables), new Action<LimitTable>(this.detach_LimitTables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(10)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_Enum_LimitTable", Storage="_LimitTables", ThisKey="ID", OtherKey="Device_type")]
		public EntitySet<LimitTable> LimitTables
		{
			get
			{
				return this._LimitTables;
			}
			set
			{
				this._LimitTables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LimitTables(LimitTable entity)
		{
			this.SendPropertyChanging();
			entity.Device_Enum = this;
		}
		
		private void detach_LimitTables(LimitTable entity)
		{
			this.SendPropertyChanging();
			entity.Device_Enum = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Email")]
	public partial class Email : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _EmailID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnEmailIDChanging(string value);
    partial void OnEmailIDChanged();
    #endregion
		
		public Email()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="NVarChar(100)")]
		public string EmailID
		{
			get
			{
				return this._EmailID;
			}
			set
			{
				if ((this._EmailID != value))
				{
					this.OnEmailIDChanging(value);
					this.SendPropertyChanging();
					this._EmailID = value;
					this.SendPropertyChanged("EmailID");
					this.OnEmailIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventLog")]
	public partial class EventLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.DateTime> _DateTime;
		
		private string _UserName;
		
		private string _EventName;
		
		private string _MessageLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnMessageLogChanging(string value);
    partial void OnMessageLogChanged();
    #endregion
		
		public EventLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="NVarChar(50)")]
		public string EventName
		{
			get
			{
				return this._EventName;
			}
			set
			{
				if ((this._EventName != value))
				{
					this.OnEventNameChanging(value);
					this.SendPropertyChanging();
					this._EventName = value;
					this.SendPropertyChanged("EventName");
					this.OnEventNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageLog", DbType="NVarChar(MAX)")]
		public string MessageLog
		{
			get
			{
				return this._MessageLog;
			}
			set
			{
				if ((this._MessageLog != value))
				{
					this.OnMessageLogChanging(value);
					this.SendPropertyChanging();
					this._MessageLog = value;
					this.SendPropertyChanged("MessageLog");
					this.OnMessageLogChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Group]")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Group_Name;
		
		private EntitySet<Group_User> _Group_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroup_NameChanging(string value);
    partial void OnGroup_NameChanged();
    #endregion
		
		public Group()
		{
			this._Group_Users = new EntitySet<Group_User>(new Action<Group_User>(this.attach_Group_Users), new Action<Group_User>(this.detach_Group_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_Name", DbType="NVarChar(50)")]
		public string Group_Name
		{
			get
			{
				return this._Group_Name;
			}
			set
			{
				if ((this._Group_Name != value))
				{
					this.OnGroup_NameChanging(value);
					this.SendPropertyChanging();
					this._Group_Name = value;
					this.SendPropertyChanged("Group_Name");
					this.OnGroup_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Group_User", Storage="_Group_Users", ThisKey="ID", OtherKey="Group_ID")]
		public EntitySet<Group_User> Group_Users
		{
			get
			{
				return this._Group_Users;
			}
			set
			{
				this._Group_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Group_Users(Group_User entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_Group_Users(Group_User entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Group_Devices")]
	public partial class Group_Device : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Group_Id;
		
		private int _Device_Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGroup_IdChanging(int value);
    partial void OnGroup_IdChanged();
    partial void OnDevice_IdChanging(int value);
    partial void OnDevice_IdChanged();
    #endregion
		
		public Group_Device()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_Id", DbType="Int NOT NULL")]
		public int Group_Id
		{
			get
			{
				return this._Group_Id;
			}
			set
			{
				if ((this._Group_Id != value))
				{
					this.OnGroup_IdChanging(value);
					this.SendPropertyChanging();
					this._Group_Id = value;
					this.SendPropertyChanged("Group_Id");
					this.OnGroup_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_Id", DbType="Int NOT NULL")]
		public int Device_Id
		{
			get
			{
				return this._Device_Id;
			}
			set
			{
				if ((this._Device_Id != value))
				{
					this.OnDevice_IdChanging(value);
					this.SendPropertyChanging();
					this._Device_Id = value;
					this.SendPropertyChanged("Device_Id");
					this.OnDevice_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Group_User")]
	public partial class Group_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _User_Id;
		
		private int _Group_ID;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnGroup_IDChanging(int value);
    partial void OnGroup_IDChanged();
    #endregion
		
		public Group_User()
		{
			this._Group = default(EntityRef<Group>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int NOT NULL")]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Int NOT NULL")]
		public int Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._Group_ID = value;
					this.SendPropertyChanged("Group_ID");
					this.OnGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Group_User", Storage="_Group", ThisKey="Group_ID", OtherKey="ID", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.Group_Users.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.Group_Users.Add(this);
						this._Group_ID = value.ID;
					}
					else
					{
						this._Group_ID = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Group_User", Storage="_User", ThisKey="User_Id", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Group_Users.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Group_Users.Add(this);
						this._User_Id = value.Id;
					}
					else
					{
						this._User_Id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LimitTable")]
	public partial class LimitTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<int> _Upper_Limit;
		
		private System.Nullable<int> _Lower_Limit;
		
		private System.Nullable<int> _Upper_Range;
		
		private System.Nullable<int> _Lower_Range;
		
		private System.Nullable<int> _Device_type;
		
		private System.Nullable<System.Guid> _Device_id;
		
		private System.Nullable<double> _ofset;
		
		private System.Nullable<System.DateTime> _dateofcalibrate;
		
		private EntityRef<Device_Config> _Device_Config;
		
		private EntityRef<Device_Enum> _Device_Enum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUpper_LimitChanging(System.Nullable<int> value);
    partial void OnUpper_LimitChanged();
    partial void OnLower_LimitChanging(System.Nullable<int> value);
    partial void OnLower_LimitChanged();
    partial void OnUpper_RangeChanging(System.Nullable<int> value);
    partial void OnUpper_RangeChanged();
    partial void OnLower_RangeChanging(System.Nullable<int> value);
    partial void OnLower_RangeChanged();
    partial void OnDevice_typeChanging(System.Nullable<int> value);
    partial void OnDevice_typeChanged();
    partial void OnDevice_idChanging(System.Nullable<System.Guid> value);
    partial void OnDevice_idChanged();
    partial void OnofsetChanging(System.Nullable<double> value);
    partial void OnofsetChanged();
    partial void OndateofcalibrateChanging(System.Nullable<System.DateTime> value);
    partial void OndateofcalibrateChanged();
    #endregion
		
		public LimitTable()
		{
			this._Device_Config = default(EntityRef<Device_Config>);
			this._Device_Enum = default(EntityRef<Device_Enum>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upper_Limit", DbType="Int")]
		public System.Nullable<int> Upper_Limit
		{
			get
			{
				return this._Upper_Limit;
			}
			set
			{
				if ((this._Upper_Limit != value))
				{
					this.OnUpper_LimitChanging(value);
					this.SendPropertyChanging();
					this._Upper_Limit = value;
					this.SendPropertyChanged("Upper_Limit");
					this.OnUpper_LimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lower_Limit", DbType="Int")]
		public System.Nullable<int> Lower_Limit
		{
			get
			{
				return this._Lower_Limit;
			}
			set
			{
				if ((this._Lower_Limit != value))
				{
					this.OnLower_LimitChanging(value);
					this.SendPropertyChanging();
					this._Lower_Limit = value;
					this.SendPropertyChanged("Lower_Limit");
					this.OnLower_LimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upper_Range", DbType="Int")]
		public System.Nullable<int> Upper_Range
		{
			get
			{
				return this._Upper_Range;
			}
			set
			{
				if ((this._Upper_Range != value))
				{
					this.OnUpper_RangeChanging(value);
					this.SendPropertyChanging();
					this._Upper_Range = value;
					this.SendPropertyChanged("Upper_Range");
					this.OnUpper_RangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lower_Range", DbType="Int")]
		public System.Nullable<int> Lower_Range
		{
			get
			{
				return this._Lower_Range;
			}
			set
			{
				if ((this._Lower_Range != value))
				{
					this.OnLower_RangeChanging(value);
					this.SendPropertyChanging();
					this._Lower_Range = value;
					this.SendPropertyChanged("Lower_Range");
					this.OnLower_RangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_type", DbType="Int")]
		public System.Nullable<int> Device_type
		{
			get
			{
				return this._Device_type;
			}
			set
			{
				if ((this._Device_type != value))
				{
					if (this._Device_Enum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDevice_typeChanging(value);
					this.SendPropertyChanging();
					this._Device_type = value;
					this.SendPropertyChanged("Device_type");
					this.OnDevice_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Device_id
		{
			get
			{
				return this._Device_id;
			}
			set
			{
				if ((this._Device_id != value))
				{
					if (this._Device_Config.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDevice_idChanging(value);
					this.SendPropertyChanging();
					this._Device_id = value;
					this.SendPropertyChanged("Device_id");
					this.OnDevice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ofset", DbType="Float")]
		public System.Nullable<double> ofset
		{
			get
			{
				return this._ofset;
			}
			set
			{
				if ((this._ofset != value))
				{
					this.OnofsetChanging(value);
					this.SendPropertyChanging();
					this._ofset = value;
					this.SendPropertyChanged("ofset");
					this.OnofsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateofcalibrate", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateofcalibrate
		{
			get
			{
				return this._dateofcalibrate;
			}
			set
			{
				if ((this._dateofcalibrate != value))
				{
					this.OndateofcalibrateChanging(value);
					this.SendPropertyChanging();
					this._dateofcalibrate = value;
					this.SendPropertyChanged("dateofcalibrate");
					this.OndateofcalibrateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_Config_LimitTable", Storage="_Device_Config", ThisKey="Device_id", OtherKey="ID", IsForeignKey=true)]
		public Device_Config Device_Config
		{
			get
			{
				return this._Device_Config.Entity;
			}
			set
			{
				Device_Config previousValue = this._Device_Config.Entity;
				if (((previousValue != value) 
							|| (this._Device_Config.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Device_Config.Entity = null;
						previousValue.LimitTables.Remove(this);
					}
					this._Device_Config.Entity = value;
					if ((value != null))
					{
						value.LimitTables.Add(this);
						this._Device_id = value.ID;
					}
					else
					{
						this._Device_id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Device_Config");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_Enum_LimitTable", Storage="_Device_Enum", ThisKey="Device_type", OtherKey="ID", IsForeignKey=true)]
		public Device_Enum Device_Enum
		{
			get
			{
				return this._Device_Enum.Entity;
			}
			set
			{
				Device_Enum previousValue = this._Device_Enum.Entity;
				if (((previousValue != value) 
							|| (this._Device_Enum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Device_Enum.Entity = null;
						previousValue.LimitTables.Remove(this);
					}
					this._Device_Enum.Entity = value;
					if ((value != null))
					{
						value.LimitTables.Add(this);
						this._Device_type = value.ID;
					}
					else
					{
						this._Device_type = default(Nullable<int>);
					}
					this.SendPropertyChanged("Device_Enum");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ofsetAuditRecord")]
	public partial class ofsetAuditRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Device_Id;
		
		private double _ofset;
		
		private string _createdby;
		
		private System.Nullable<System.DateTime> _createddatetime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDevice_IdChanging(System.Nullable<int> value);
    partial void OnDevice_IdChanged();
    partial void OnofsetChanging(double value);
    partial void OnofsetChanged();
    partial void OncreatedbyChanging(string value);
    partial void OncreatedbyChanged();
    partial void OncreateddatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OncreateddatetimeChanged();
    #endregion
		
		public ofsetAuditRecord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_Id", DbType="Int")]
		public System.Nullable<int> Device_Id
		{
			get
			{
				return this._Device_Id;
			}
			set
			{
				if ((this._Device_Id != value))
				{
					this.OnDevice_IdChanging(value);
					this.SendPropertyChanging();
					this._Device_Id = value;
					this.SendPropertyChanged("Device_Id");
					this.OnDevice_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ofset", DbType="Float NOT NULL")]
		public double ofset
		{
			get
			{
				return this._ofset;
			}
			set
			{
				if ((this._ofset != value))
				{
					this.OnofsetChanging(value);
					this.SendPropertyChanging();
					this._ofset = value;
					this.SendPropertyChanged("ofset");
					this.OnofsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdby", DbType="NVarChar(50)")]
		public string createdby
		{
			get
			{
				return this._createdby;
			}
			set
			{
				if ((this._createdby != value))
				{
					this.OncreatedbyChanging(value);
					this.SendPropertyChanging();
					this._createdby = value;
					this.SendPropertyChanged("createdby");
					this.OncreatedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createddatetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> createddatetime
		{
			get
			{
				return this._createddatetime;
			}
			set
			{
				if ((this._createddatetime != value))
				{
					this.OncreateddatetimeChanging(value);
					this.SendPropertyChanging();
					this._createddatetime = value;
					this.SendPropertyChanged("createddatetime");
					this.OncreateddatetimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMS")]
	public partial class SM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _SMS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnSMSChanging(string value);
    partial void OnSMSChanged();
    #endregion
		
		public SM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMS", DbType="NVarChar(50)")]
		public string SMS
		{
			get
			{
				return this._SMS;
			}
			set
			{
				if ((this._SMS != value))
				{
					this.OnSMSChanging(value);
					this.SendPropertyChanging();
					this._SMS = value;
					this.SendPropertyChanged("SMS");
					this.OnSMSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SYSProperties")]
	public partial class SYSProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Unit;
		
		private System.Nullable<bool> _Signature;
		
		private System.Nullable<bool> _Automatic_Sign;
		
		private System.Nullable<int> _Port;
		
		private string _BaudRate;
		
		private string _DataBit;
		
		private string _Parity;
		
		private string _StopBit;
		
		private System.Nullable<bool> _RTS;
		
		private System.Nullable<bool> _DTS;
		
		private System.Nullable<int> _D_Type;
		
		private string _D_Name;
		
		private System.Nullable<int> _Number_Devices;
		
		private System.Nullable<bool> _Email;
		
		private System.Nullable<bool> _SMS;
		
		private System.Nullable<bool> _ExtAlram;
		
		private System.Nullable<int> _Alarmport;
		
		private string _Alarmbaud;
		
		private string _backuplocation;
		
		private System.Nullable<System.DateTime> _lastbakdate;
		
		private System.Nullable<int> _Alert_Interval;
		
		private System.Nullable<bool> _AlarmEnable;
		
		private string _Alarm_IP;
		
		private string _Alarm_Port;
		
		private string _EmailID;
		
		private string _EmailPassword;
		
		private string _EmailSMTP;
		
		private string _EmailPort;
		
		private string _SMSID;
		
		private string _SMSPassword;
		
		private string _SMSSecret;
		
		private string _SMSToken;
		
		private System.Nullable<bool> _GSM;
		
		private System.Nullable<bool> _WebLink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnSignatureChanging(System.Nullable<bool> value);
    partial void OnSignatureChanged();
    partial void OnAutomatic_SignChanging(System.Nullable<bool> value);
    partial void OnAutomatic_SignChanged();
    partial void OnPortChanging(System.Nullable<int> value);
    partial void OnPortChanged();
    partial void OnBaudRateChanging(string value);
    partial void OnBaudRateChanged();
    partial void OnDataBitChanging(string value);
    partial void OnDataBitChanged();
    partial void OnParityChanging(string value);
    partial void OnParityChanged();
    partial void OnStopBitChanging(string value);
    partial void OnStopBitChanged();
    partial void OnRTSChanging(System.Nullable<bool> value);
    partial void OnRTSChanged();
    partial void OnDTSChanging(System.Nullable<bool> value);
    partial void OnDTSChanged();
    partial void OnD_TypeChanging(System.Nullable<int> value);
    partial void OnD_TypeChanged();
    partial void OnD_NameChanging(string value);
    partial void OnD_NameChanged();
    partial void OnNumber_DevicesChanging(System.Nullable<int> value);
    partial void OnNumber_DevicesChanged();
    partial void OnEmailChanging(System.Nullable<bool> value);
    partial void OnEmailChanged();
    partial void OnSMSChanging(System.Nullable<bool> value);
    partial void OnSMSChanged();
    partial void OnExtAlramChanging(System.Nullable<bool> value);
    partial void OnExtAlramChanged();
    partial void OnAlarmportChanging(System.Nullable<int> value);
    partial void OnAlarmportChanged();
    partial void OnAlarmbaudChanging(string value);
    partial void OnAlarmbaudChanged();
    partial void OnbackuplocationChanging(string value);
    partial void OnbackuplocationChanged();
    partial void OnlastbakdateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastbakdateChanged();
    partial void OnAlert_IntervalChanging(System.Nullable<int> value);
    partial void OnAlert_IntervalChanged();
    partial void OnAlarmEnableChanging(System.Nullable<bool> value);
    partial void OnAlarmEnableChanged();
    partial void OnAlarm_IPChanging(string value);
    partial void OnAlarm_IPChanged();
    partial void OnAlarm_PortChanging(string value);
    partial void OnAlarm_PortChanged();
    partial void OnEmailIDChanging(string value);
    partial void OnEmailIDChanged();
    partial void OnEmailPasswordChanging(string value);
    partial void OnEmailPasswordChanged();
    partial void OnEmailSMTPChanging(string value);
    partial void OnEmailSMTPChanged();
    partial void OnEmailPortChanging(string value);
    partial void OnEmailPortChanged();
    partial void OnSMSIDChanging(string value);
    partial void OnSMSIDChanged();
    partial void OnSMSPasswordChanging(string value);
    partial void OnSMSPasswordChanged();
    partial void OnSMSSecretChanging(string value);
    partial void OnSMSSecretChanged();
    partial void OnSMSTokenChanging(string value);
    partial void OnSMSTokenChanged();
    partial void OnGSMChanging(System.Nullable<bool> value);
    partial void OnGSMChanged();
    partial void OnWebLinkChanging(System.Nullable<bool> value);
    partial void OnWebLinkChanged();
    #endregion
		
		public SYSProperty()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(50)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signature", DbType="Bit")]
		public System.Nullable<bool> Signature
		{
			get
			{
				return this._Signature;
			}
			set
			{
				if ((this._Signature != value))
				{
					this.OnSignatureChanging(value);
					this.SendPropertyChanging();
					this._Signature = value;
					this.SendPropertyChanged("Signature");
					this.OnSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Automatic_Sign", DbType="Bit")]
		public System.Nullable<bool> Automatic_Sign
		{
			get
			{
				return this._Automatic_Sign;
			}
			set
			{
				if ((this._Automatic_Sign != value))
				{
					this.OnAutomatic_SignChanging(value);
					this.SendPropertyChanging();
					this._Automatic_Sign = value;
					this.SendPropertyChanged("Automatic_Sign");
					this.OnAutomatic_SignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int")]
		public System.Nullable<int> Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaudRate", DbType="NVarChar(50)")]
		public string BaudRate
		{
			get
			{
				return this._BaudRate;
			}
			set
			{
				if ((this._BaudRate != value))
				{
					this.OnBaudRateChanging(value);
					this.SendPropertyChanging();
					this._BaudRate = value;
					this.SendPropertyChanged("BaudRate");
					this.OnBaudRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataBit", DbType="NVarChar(50)")]
		public string DataBit
		{
			get
			{
				return this._DataBit;
			}
			set
			{
				if ((this._DataBit != value))
				{
					this.OnDataBitChanging(value);
					this.SendPropertyChanging();
					this._DataBit = value;
					this.SendPropertyChanged("DataBit");
					this.OnDataBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parity", DbType="NVarChar(50)")]
		public string Parity
		{
			get
			{
				return this._Parity;
			}
			set
			{
				if ((this._Parity != value))
				{
					this.OnParityChanging(value);
					this.SendPropertyChanging();
					this._Parity = value;
					this.SendPropertyChanged("Parity");
					this.OnParityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopBit", DbType="NVarChar(50)")]
		public string StopBit
		{
			get
			{
				return this._StopBit;
			}
			set
			{
				if ((this._StopBit != value))
				{
					this.OnStopBitChanging(value);
					this.SendPropertyChanging();
					this._StopBit = value;
					this.SendPropertyChanged("StopBit");
					this.OnStopBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTS", DbType="Bit")]
		public System.Nullable<bool> RTS
		{
			get
			{
				return this._RTS;
			}
			set
			{
				if ((this._RTS != value))
				{
					this.OnRTSChanging(value);
					this.SendPropertyChanging();
					this._RTS = value;
					this.SendPropertyChanged("RTS");
					this.OnRTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTS", DbType="Bit")]
		public System.Nullable<bool> DTS
		{
			get
			{
				return this._DTS;
			}
			set
			{
				if ((this._DTS != value))
				{
					this.OnDTSChanging(value);
					this.SendPropertyChanging();
					this._DTS = value;
					this.SendPropertyChanged("DTS");
					this.OnDTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_Type", DbType="Int")]
		public System.Nullable<int> D_Type
		{
			get
			{
				return this._D_Type;
			}
			set
			{
				if ((this._D_Type != value))
				{
					this.OnD_TypeChanging(value);
					this.SendPropertyChanging();
					this._D_Type = value;
					this.SendPropertyChanged("D_Type");
					this.OnD_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_Name", DbType="NVarChar(50)")]
		public string D_Name
		{
			get
			{
				return this._D_Name;
			}
			set
			{
				if ((this._D_Name != value))
				{
					this.OnD_NameChanging(value);
					this.SendPropertyChanging();
					this._D_Name = value;
					this.SendPropertyChanged("D_Name");
					this.OnD_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number_Devices", DbType="Int")]
		public System.Nullable<int> Number_Devices
		{
			get
			{
				return this._Number_Devices;
			}
			set
			{
				if ((this._Number_Devices != value))
				{
					this.OnNumber_DevicesChanging(value);
					this.SendPropertyChanging();
					this._Number_Devices = value;
					this.SendPropertyChanged("Number_Devices");
					this.OnNumber_DevicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Bit")]
		public System.Nullable<bool> Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMS", DbType="Bit")]
		public System.Nullable<bool> SMS
		{
			get
			{
				return this._SMS;
			}
			set
			{
				if ((this._SMS != value))
				{
					this.OnSMSChanging(value);
					this.SendPropertyChanging();
					this._SMS = value;
					this.SendPropertyChanged("SMS");
					this.OnSMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtAlram", DbType="Bit")]
		public System.Nullable<bool> ExtAlram
		{
			get
			{
				return this._ExtAlram;
			}
			set
			{
				if ((this._ExtAlram != value))
				{
					this.OnExtAlramChanging(value);
					this.SendPropertyChanging();
					this._ExtAlram = value;
					this.SendPropertyChanged("ExtAlram");
					this.OnExtAlramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alarmport", DbType="Int")]
		public System.Nullable<int> Alarmport
		{
			get
			{
				return this._Alarmport;
			}
			set
			{
				if ((this._Alarmport != value))
				{
					this.OnAlarmportChanging(value);
					this.SendPropertyChanging();
					this._Alarmport = value;
					this.SendPropertyChanged("Alarmport");
					this.OnAlarmportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alarmbaud", DbType="NVarChar(50)")]
		public string Alarmbaud
		{
			get
			{
				return this._Alarmbaud;
			}
			set
			{
				if ((this._Alarmbaud != value))
				{
					this.OnAlarmbaudChanging(value);
					this.SendPropertyChanging();
					this._Alarmbaud = value;
					this.SendPropertyChanged("Alarmbaud");
					this.OnAlarmbaudChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_backuplocation", DbType="NVarChar(MAX)")]
		public string backuplocation
		{
			get
			{
				return this._backuplocation;
			}
			set
			{
				if ((this._backuplocation != value))
				{
					this.OnbackuplocationChanging(value);
					this.SendPropertyChanging();
					this._backuplocation = value;
					this.SendPropertyChanged("backuplocation");
					this.OnbackuplocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastbakdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastbakdate
		{
			get
			{
				return this._lastbakdate;
			}
			set
			{
				if ((this._lastbakdate != value))
				{
					this.OnlastbakdateChanging(value);
					this.SendPropertyChanging();
					this._lastbakdate = value;
					this.SendPropertyChanged("lastbakdate");
					this.OnlastbakdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alert_Interval", DbType="Int")]
		public System.Nullable<int> Alert_Interval
		{
			get
			{
				return this._Alert_Interval;
			}
			set
			{
				if ((this._Alert_Interval != value))
				{
					this.OnAlert_IntervalChanging(value);
					this.SendPropertyChanging();
					this._Alert_Interval = value;
					this.SendPropertyChanged("Alert_Interval");
					this.OnAlert_IntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlarmEnable", DbType="Bit")]
		public System.Nullable<bool> AlarmEnable
		{
			get
			{
				return this._AlarmEnable;
			}
			set
			{
				if ((this._AlarmEnable != value))
				{
					this.OnAlarmEnableChanging(value);
					this.SendPropertyChanging();
					this._AlarmEnable = value;
					this.SendPropertyChanged("AlarmEnable");
					this.OnAlarmEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alarm_IP", DbType="NVarChar(50)")]
		public string Alarm_IP
		{
			get
			{
				return this._Alarm_IP;
			}
			set
			{
				if ((this._Alarm_IP != value))
				{
					this.OnAlarm_IPChanging(value);
					this.SendPropertyChanging();
					this._Alarm_IP = value;
					this.SendPropertyChanged("Alarm_IP");
					this.OnAlarm_IPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alarm_Port", DbType="NVarChar(50)")]
		public string Alarm_Port
		{
			get
			{
				return this._Alarm_Port;
			}
			set
			{
				if ((this._Alarm_Port != value))
				{
					this.OnAlarm_PortChanging(value);
					this.SendPropertyChanging();
					this._Alarm_Port = value;
					this.SendPropertyChanged("Alarm_Port");
					this.OnAlarm_PortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="NVarChar(150)")]
		public string EmailID
		{
			get
			{
				return this._EmailID;
			}
			set
			{
				if ((this._EmailID != value))
				{
					this.OnEmailIDChanging(value);
					this.SendPropertyChanging();
					this._EmailID = value;
					this.SendPropertyChanged("EmailID");
					this.OnEmailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailPassword", DbType="NVarChar(150)")]
		public string EmailPassword
		{
			get
			{
				return this._EmailPassword;
			}
			set
			{
				if ((this._EmailPassword != value))
				{
					this.OnEmailPasswordChanging(value);
					this.SendPropertyChanging();
					this._EmailPassword = value;
					this.SendPropertyChanged("EmailPassword");
					this.OnEmailPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSMTP", DbType="NVarChar(50)")]
		public string EmailSMTP
		{
			get
			{
				return this._EmailSMTP;
			}
			set
			{
				if ((this._EmailSMTP != value))
				{
					this.OnEmailSMTPChanging(value);
					this.SendPropertyChanging();
					this._EmailSMTP = value;
					this.SendPropertyChanged("EmailSMTP");
					this.OnEmailSMTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailPort", DbType="NVarChar(50)")]
		public string EmailPort
		{
			get
			{
				return this._EmailPort;
			}
			set
			{
				if ((this._EmailPort != value))
				{
					this.OnEmailPortChanging(value);
					this.SendPropertyChanging();
					this._EmailPort = value;
					this.SendPropertyChanged("EmailPort");
					this.OnEmailPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSID", DbType="NVarChar(150)")]
		public string SMSID
		{
			get
			{
				return this._SMSID;
			}
			set
			{
				if ((this._SMSID != value))
				{
					this.OnSMSIDChanging(value);
					this.SendPropertyChanging();
					this._SMSID = value;
					this.SendPropertyChanged("SMSID");
					this.OnSMSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSPassword", DbType="NVarChar(150)")]
		public string SMSPassword
		{
			get
			{
				return this._SMSPassword;
			}
			set
			{
				if ((this._SMSPassword != value))
				{
					this.OnSMSPasswordChanging(value);
					this.SendPropertyChanging();
					this._SMSPassword = value;
					this.SendPropertyChanged("SMSPassword");
					this.OnSMSPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSSecret", DbType="NVarChar(50)")]
		public string SMSSecret
		{
			get
			{
				return this._SMSSecret;
			}
			set
			{
				if ((this._SMSSecret != value))
				{
					this.OnSMSSecretChanging(value);
					this.SendPropertyChanging();
					this._SMSSecret = value;
					this.SendPropertyChanged("SMSSecret");
					this.OnSMSSecretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSToken", DbType="NVarChar(500)")]
		public string SMSToken
		{
			get
			{
				return this._SMSToken;
			}
			set
			{
				if ((this._SMSToken != value))
				{
					this.OnSMSTokenChanging(value);
					this.SendPropertyChanging();
					this._SMSToken = value;
					this.SendPropertyChanged("SMSToken");
					this.OnSMSTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSM", DbType="Bit")]
		public System.Nullable<bool> GSM
		{
			get
			{
				return this._GSM;
			}
			set
			{
				if ((this._GSM != value))
				{
					this.OnGSMChanging(value);
					this.SendPropertyChanging();
					this._GSM = value;
					this.SendPropertyChanged("GSM");
					this.OnGSMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebLink", DbType="Bit")]
		public System.Nullable<bool> WebLink
		{
			get
			{
				return this._WebLink;
			}
			set
			{
				if ((this._WebLink != value))
				{
					this.OnWebLinkChanging(value);
					this.SendPropertyChanging();
					this._WebLink = value;
					this.SendPropertyChanged("WebLink");
					this.OnWebLinkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllDevices")]
	public partial class AllDevice
	{
		
		private System.Nullable<int> _Device_Id;
		
		private string _Type;
		
		private string _Channel_id;
		
		private string _Location;
		
		private string _Instrument;
		
		private System.Nullable<int> _Interval;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<bool> _Alaram;
		
		private System.Nullable<bool> _Rh_Active;
		
		private System.Nullable<int> _Upper_Limit;
		
		private System.Nullable<int> _Lower_Limit;
		
		private System.Nullable<int> _Upper_Range;
		
		private System.Nullable<int> _Lower_Range;
		
		public AllDevice()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_Id", DbType="Int")]
		public System.Nullable<int> Device_Id
		{
			get
			{
				return this._Device_Id;
			}
			set
			{
				if ((this._Device_Id != value))
				{
					this._Device_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(10)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Channel_id", DbType="NVarChar(50)")]
		public string Channel_id
		{
			get
			{
				return this._Channel_id;
			}
			set
			{
				if ((this._Channel_id != value))
				{
					this._Channel_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instrument", DbType="NVarChar(50)")]
		public string Instrument
		{
			get
			{
				return this._Instrument;
			}
			set
			{
				if ((this._Instrument != value))
				{
					this._Instrument = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interval", DbType="Int")]
		public System.Nullable<int> Interval
		{
			get
			{
				return this._Interval;
			}
			set
			{
				if ((this._Interval != value))
				{
					this._Interval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alaram", DbType="Bit")]
		public System.Nullable<bool> Alaram
		{
			get
			{
				return this._Alaram;
			}
			set
			{
				if ((this._Alaram != value))
				{
					this._Alaram = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rh_Active", DbType="Bit")]
		public System.Nullable<bool> Rh_Active
		{
			get
			{
				return this._Rh_Active;
			}
			set
			{
				if ((this._Rh_Active != value))
				{
					this._Rh_Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upper_Limit", DbType="Int")]
		public System.Nullable<int> Upper_Limit
		{
			get
			{
				return this._Upper_Limit;
			}
			set
			{
				if ((this._Upper_Limit != value))
				{
					this._Upper_Limit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lower_Limit", DbType="Int")]
		public System.Nullable<int> Lower_Limit
		{
			get
			{
				return this._Lower_Limit;
			}
			set
			{
				if ((this._Lower_Limit != value))
				{
					this._Lower_Limit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upper_Range", DbType="Int")]
		public System.Nullable<int> Upper_Range
		{
			get
			{
				return this._Upper_Range;
			}
			set
			{
				if ((this._Upper_Range != value))
				{
					this._Upper_Range = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lower_Range", DbType="Int")]
		public System.Nullable<int> Lower_Range
		{
			get
			{
				return this._Lower_Range;
			}
			set
			{
				if ((this._Lower_Range != value))
				{
					this._Lower_Range = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TotalDevices")]
	public partial class TotalDevice
	{
		
		private System.Guid _ID;
		
		private string _Channel_id;
		
		private System.Nullable<int> _Device_Id;
		
		private string _Location;
		
		private string _Instrument;
		
		private System.Nullable<int> _Interval;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<bool> _Alaram;
		
		private System.Nullable<System.DateTime> _Last_Record;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDateTime;
		
		private System.Nullable<bool> _IsRowActive;
		
		private System.Nullable<bool> _Rh_Active;
		
		private System.Nullable<int> _Upper_Limit;
		
		private System.Nullable<int> _Lower_Limit;
		
		private System.Nullable<int> _Upper_Range;
		
		private System.Nullable<int> _Lower_Range;
		
		private System.Nullable<int> _Device_type;
		
		public TotalDevice()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Channel_id", DbType="NVarChar(50)")]
		public string Channel_id
		{
			get
			{
				return this._Channel_id;
			}
			set
			{
				if ((this._Channel_id != value))
				{
					this._Channel_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_Id", DbType="Int")]
		public System.Nullable<int> Device_Id
		{
			get
			{
				return this._Device_Id;
			}
			set
			{
				if ((this._Device_Id != value))
				{
					this._Device_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instrument", DbType="NVarChar(50)")]
		public string Instrument
		{
			get
			{
				return this._Instrument;
			}
			set
			{
				if ((this._Instrument != value))
				{
					this._Instrument = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interval", DbType="Int")]
		public System.Nullable<int> Interval
		{
			get
			{
				return this._Interval;
			}
			set
			{
				if ((this._Interval != value))
				{
					this._Interval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alaram", DbType="Bit")]
		public System.Nullable<bool> Alaram
		{
			get
			{
				return this._Alaram;
			}
			set
			{
				if ((this._Alaram != value))
				{
					this._Alaram = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Record", DbType="DateTime")]
		public System.Nullable<System.DateTime> Last_Record
		{
			get
			{
				return this._Last_Record;
			}
			set
			{
				if ((this._Last_Record != value))
				{
					this._Last_Record = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this._ModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDateTime
		{
			get
			{
				return this._ModifiedDateTime;
			}
			set
			{
				if ((this._ModifiedDateTime != value))
				{
					this._ModifiedDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRowActive", DbType="Bit")]
		public System.Nullable<bool> IsRowActive
		{
			get
			{
				return this._IsRowActive;
			}
			set
			{
				if ((this._IsRowActive != value))
				{
					this._IsRowActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rh_Active", DbType="Bit")]
		public System.Nullable<bool> Rh_Active
		{
			get
			{
				return this._Rh_Active;
			}
			set
			{
				if ((this._Rh_Active != value))
				{
					this._Rh_Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upper_Limit", DbType="Int")]
		public System.Nullable<int> Upper_Limit
		{
			get
			{
				return this._Upper_Limit;
			}
			set
			{
				if ((this._Upper_Limit != value))
				{
					this._Upper_Limit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lower_Limit", DbType="Int")]
		public System.Nullable<int> Lower_Limit
		{
			get
			{
				return this._Lower_Limit;
			}
			set
			{
				if ((this._Lower_Limit != value))
				{
					this._Lower_Limit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upper_Range", DbType="Int")]
		public System.Nullable<int> Upper_Range
		{
			get
			{
				return this._Upper_Range;
			}
			set
			{
				if ((this._Upper_Range != value))
				{
					this._Upper_Range = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lower_Range", DbType="Int")]
		public System.Nullable<int> Lower_Range
		{
			get
			{
				return this._Lower_Range;
			}
			set
			{
				if ((this._Lower_Range != value))
				{
					this._Lower_Range = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_type", DbType="Int")]
		public System.Nullable<int> Device_type
		{
			get
			{
				return this._Device_type;
			}
			set
			{
				if ((this._Device_type != value))
				{
					this._Device_type = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log]")]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _Device_Id;
		
		private string _Channel_ID;
		
		private System.Nullable<double> _Temp_Data;
		
		private System.Nullable<System.DateTime> _date_;
		
		private System.Nullable<double> _Rh_Data;
		
		private System.Nullable<double> _Pressure;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDevice_IdChanging(System.Guid value);
    partial void OnDevice_IdChanged();
    partial void OnChannel_IDChanging(string value);
    partial void OnChannel_IDChanged();
    partial void OnTemp_DataChanging(System.Nullable<double> value);
    partial void OnTemp_DataChanged();
    partial void Ondate_Changing(System.Nullable<System.DateTime> value);
    partial void Ondate_Changed();
    partial void OnRh_DataChanging(System.Nullable<double> value);
    partial void OnRh_DataChanged();
    partial void OnPressureChanging(System.Nullable<double> value);
    partial void OnPressureChanged();
    #endregion
		
		public Log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Device_Id
		{
			get
			{
				return this._Device_Id;
			}
			set
			{
				if ((this._Device_Id != value))
				{
					this.OnDevice_IdChanging(value);
					this.SendPropertyChanging();
					this._Device_Id = value;
					this.SendPropertyChanged("Device_Id");
					this.OnDevice_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Channel_ID", DbType="NVarChar(50)")]
		public string Channel_ID
		{
			get
			{
				return this._Channel_ID;
			}
			set
			{
				if ((this._Channel_ID != value))
				{
					this.OnChannel_IDChanging(value);
					this.SendPropertyChanging();
					this._Channel_ID = value;
					this.SendPropertyChanged("Channel_ID");
					this.OnChannel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temp_Data", DbType="Float")]
		public System.Nullable<double> Temp_Data
		{
			get
			{
				return this._Temp_Data;
			}
			set
			{
				if ((this._Temp_Data != value))
				{
					this.OnTemp_DataChanging(value);
					this.SendPropertyChanging();
					this._Temp_Data = value;
					this.SendPropertyChanged("Temp_Data");
					this.OnTemp_DataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_
		{
			get
			{
				return this._date_;
			}
			set
			{
				if ((this._date_ != value))
				{
					this.Ondate_Changing(value);
					this.SendPropertyChanging();
					this._date_ = value;
					this.SendPropertyChanged("date_");
					this.Ondate_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rh_Data", DbType="Float")]
		public System.Nullable<double> Rh_Data
		{
			get
			{
				return this._Rh_Data;
			}
			set
			{
				if ((this._Rh_Data != value))
				{
					this.OnRh_DataChanging(value);
					this.SendPropertyChanging();
					this._Rh_Data = value;
					this.SendPropertyChanged("Rh_Data");
					this.OnRh_DataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pressure", DbType="Float")]
		public System.Nullable<double> Pressure
		{
			get
			{
				return this._Pressure;
			}
			set
			{
				if ((this._Pressure != value))
				{
					this.OnPressureChanging(value);
					this.SendPropertyChanging();
					this._Pressure = value;
					this.SendPropertyChanged("Pressure");
					this.OnPressureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _RoleName;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public Role()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Users", ThisKey="Id", OtherKey="Role")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role1 = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _User_Name;
		
		private string _Password;
		
		private System.Nullable<int> _Role;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private System.Nullable<bool> _Active;
		
		private string _ModefiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDateTime;
		
		private System.Nullable<bool> _IsRowEnable;
		
		private string _Full_Name;
		
		private string _Authority;
		
		private string _Description;
		
		private string _Email;
		
		private string _SMS;
		
		private System.Nullable<bool> _Email_Notification;
		
		private System.Nullable<bool> _SMS_Notification;
		
		private EntitySet<Group_User> _Group_Users;
		
		private EntityRef<Role> _Role1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUser_NameChanging(string value);
    partial void OnUser_NameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnRoleChanging(System.Nullable<int> value);
    partial void OnRoleChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreateDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateTimeChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnModefiedByChanging(string value);
    partial void OnModefiedByChanged();
    partial void OnModifiedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateTimeChanged();
    partial void OnIsRowEnableChanging(System.Nullable<bool> value);
    partial void OnIsRowEnableChanged();
    partial void OnFull_NameChanging(string value);
    partial void OnFull_NameChanged();
    partial void OnAuthorityChanging(string value);
    partial void OnAuthorityChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSMSChanging(string value);
    partial void OnSMSChanged();
    partial void OnEmail_NotificationChanging(System.Nullable<bool> value);
    partial void OnEmail_NotificationChanged();
    partial void OnSMS_NotificationChanging(System.Nullable<bool> value);
    partial void OnSMS_NotificationChanged();
    #endregion
		
		public User()
		{
			this._Group_Users = new EntitySet<Group_User>(new Action<Group_User>(this.attach_Group_Users), new Action<Group_User>(this.detach_Group_Users));
			this._Role1 = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string User_Name
		{
			get
			{
				return this._User_Name;
			}
			set
			{
				if ((this._User_Name != value))
				{
					this.OnUser_NameChanging(value);
					this.SendPropertyChanging();
					this._User_Name = value;
					this.SendPropertyChanged("User_Name");
					this.OnUser_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(2000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Int")]
		public System.Nullable<int> Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					if (this._Role1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this.OnCreateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateDateTime = value;
					this.SendPropertyChanged("CreateDateTime");
					this.OnCreateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModefiedBy", DbType="NVarChar(50)")]
		public string ModefiedBy
		{
			get
			{
				return this._ModefiedBy;
			}
			set
			{
				if ((this._ModefiedBy != value))
				{
					this.OnModefiedByChanging(value);
					this.SendPropertyChanging();
					this._ModefiedBy = value;
					this.SendPropertyChanged("ModefiedBy");
					this.OnModefiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDateTime
		{
			get
			{
				return this._ModifiedDateTime;
			}
			set
			{
				if ((this._ModifiedDateTime != value))
				{
					this.OnModifiedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDateTime = value;
					this.SendPropertyChanged("ModifiedDateTime");
					this.OnModifiedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRowEnable", DbType="Bit")]
		public System.Nullable<bool> IsRowEnable
		{
			get
			{
				return this._IsRowEnable;
			}
			set
			{
				if ((this._IsRowEnable != value))
				{
					this.OnIsRowEnableChanging(value);
					this.SendPropertyChanging();
					this._IsRowEnable = value;
					this.SendPropertyChanged("IsRowEnable");
					this.OnIsRowEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Full_Name", DbType="NVarChar(MAX)")]
		public string Full_Name
		{
			get
			{
				return this._Full_Name;
			}
			set
			{
				if ((this._Full_Name != value))
				{
					this.OnFull_NameChanging(value);
					this.SendPropertyChanging();
					this._Full_Name = value;
					this.SendPropertyChanged("Full_Name");
					this.OnFull_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authority", DbType="NVarChar(50)")]
		public string Authority
		{
			get
			{
				return this._Authority;
			}
			set
			{
				if ((this._Authority != value))
				{
					this.OnAuthorityChanging(value);
					this.SendPropertyChanging();
					this._Authority = value;
					this.SendPropertyChanged("Authority");
					this.OnAuthorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMS", DbType="NVarChar(50)")]
		public string SMS
		{
			get
			{
				return this._SMS;
			}
			set
			{
				if ((this._SMS != value))
				{
					this.OnSMSChanging(value);
					this.SendPropertyChanging();
					this._SMS = value;
					this.SendPropertyChanged("SMS");
					this.OnSMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email_Notification", DbType="Bit")]
		public System.Nullable<bool> Email_Notification
		{
			get
			{
				return this._Email_Notification;
			}
			set
			{
				if ((this._Email_Notification != value))
				{
					this.OnEmail_NotificationChanging(value);
					this.SendPropertyChanging();
					this._Email_Notification = value;
					this.SendPropertyChanged("Email_Notification");
					this.OnEmail_NotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMS_Notification", DbType="Bit")]
		public System.Nullable<bool> SMS_Notification
		{
			get
			{
				return this._SMS_Notification;
			}
			set
			{
				if ((this._SMS_Notification != value))
				{
					this.OnSMS_NotificationChanging(value);
					this.SendPropertyChanging();
					this._SMS_Notification = value;
					this.SendPropertyChanged("SMS_Notification");
					this.OnSMS_NotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Group_User", Storage="_Group_Users", ThisKey="Id", OtherKey="User_Id")]
		public EntitySet<Group_User> Group_Users
		{
			get
			{
				return this._Group_Users;
			}
			set
			{
				this._Group_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Role1", ThisKey="Role", OtherKey="Id", IsForeignKey=true)]
		public Role Role1
		{
			get
			{
				return this._Role1.Entity;
			}
			set
			{
				Role previousValue = this._Role1.Entity;
				if (((previousValue != value) 
							|| (this._Role1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role1.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Role1.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._Role = value.Id;
					}
					else
					{
						this._Role = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Group_Users(Group_User entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Group_Users(Group_User entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	public partial class Create_dbBackupResult
	{
		
		private string _ErrorMessage;
		
		public Create_dbBackupResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(4000)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this._ErrorMessage = value;
				}
			}
		}
	}
	
	public partial class Get_AcknowladgeResult
	{
		
		private System.Guid _ID;
		
		private string _Device_ID;
		
		private string _Event_Type;
		
		private System.Nullable<System.DateTime> _Event_DateTime;
		
		private string _Location;
		
		private string _Instrument;
		
		private string _Event;
		
		private string _Ack_Comments;
		
		private string _Ack_User;
		
		private System.Nullable<System.DateTime> _Ack_DateTime;
		
		public Get_AcknowladgeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_ID", DbType="NVarChar(50)")]
		public string Device_ID
		{
			get
			{
				return this._Device_ID;
			}
			set
			{
				if ((this._Device_ID != value))
				{
					this._Device_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event_Type", DbType="NVarChar(50)")]
		public string Event_Type
		{
			get
			{
				return this._Event_Type;
			}
			set
			{
				if ((this._Event_Type != value))
				{
					this._Event_Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event_DateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Event_DateTime
		{
			get
			{
				return this._Event_DateTime;
			}
			set
			{
				if ((this._Event_DateTime != value))
				{
					this._Event_DateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instrument", DbType="NVarChar(50)")]
		public string Instrument
		{
			get
			{
				return this._Instrument;
			}
			set
			{
				if ((this._Instrument != value))
				{
					this._Instrument = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event", DbType="NVarChar(100)")]
		public string Event
		{
			get
			{
				return this._Event;
			}
			set
			{
				if ((this._Event != value))
				{
					this._Event = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ack_Comments", DbType="NVarChar(MAX)")]
		public string Ack_Comments
		{
			get
			{
				return this._Ack_Comments;
			}
			set
			{
				if ((this._Ack_Comments != value))
				{
					this._Ack_Comments = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ack_User", DbType="NVarChar(50)")]
		public string Ack_User
		{
			get
			{
				return this._Ack_User;
			}
			set
			{
				if ((this._Ack_User != value))
				{
					this._Ack_User = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ack_DateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ack_DateTime
		{
			get
			{
				return this._Ack_DateTime;
			}
			set
			{
				if ((this._Ack_DateTime != value))
				{
					this._Ack_DateTime = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
